API = $(pkg)-api.xml
RAW_API = $(pkg)-api.raw

ASSEMBLY_NAME = $(pkg)-sharp
ASSEMBLY = $(ASSEMBLY_NAME).dll

TARGET = $(pkg:=-sharp.dll) $(pkg:=-sharp.dll.config) $(POLICY_ASSEMBLIES)
noinst_DATA = $(TARGET)
TARGET_API = $(pkg:=-api.xml)
gapidir = $(datadir)/gapi-2.0
gapi_DATA = $(TARGET_API)
CLEANFILES = $(ASSEMBLY) $(ASSEMBLY).mdb $(POLICY_ASSEMBLIES) generated-stamp generated/*.cs $(API) glue/generated.c AssemblyInfo.cs $(POLICY_CONFIGS)
DISTCLEANFILES += $(ASSEMBLY).config $(RAW_API) 

POLICY_ASSEMBLIES = $(addsuffix .$(ASSEMBLY), $(addprefix policy., $(POLICY_VERSIONS)))
POLICY_CONFIGS = $(addsuffix .config, $(addprefix policy., $(POLICY_VERSIONS)))

EXTRA_DIST += $(RAW_API) $(SYMBOLS) $(ASSEMBLY).config.in $(METADATA) $(customs) $(sources) $(add_dist)

build_symbols = $(addprefix --symbols=$(srcdir)/, $(SYMBOLS))


$(RAW_API): $(GAPI_PARSER) $(pkg)-sources.xml
	$(GAPI_PARSER) $(pkg)-sources.xml

$(API): $(METADATA) $(RAW_API) $(SYMBOLS) $(GAPI_FIXUP)
	cp $(srcdir)/$(RAW_API) $(API)
	chmod u+w $(API)
	@if test -n '$(METADATA)'; then		\
		echo "$(GAPI_FIXUP) --api=$(API) --metadata=$(srcdir)/$(METADATA) $(build_symbols)";	\
		$(GAPI_FIXUP) --api=$(API) --metadata=$(srcdir)/$(METADATA) $(build_symbols); \
	fi

build_customs = $(addprefix $(srcdir)/, $(customs))
api_includes = $(addprefix -I:, $(INCLUDE_API))

generated-stamp: $(API) $(GAPI_CODEGEN) $(build_customs)
	rm -f generated/* &&	\
	$(GAPI_CODEGEN) --generate $(API) \
	$(api_includes)	$(INCLUDE_EXTRA) \
	--outdir=generated --customdir=$(srcdir) --assembly-name=$(ASSEMBLY_NAME)	\
	&& touch generated-stamp

AssemblyInfo.cs: $(top_builddir)/bindings/dotnet/AssemblyInfo.cs
	cp $(top_builddir)/bindings/dotnet/AssemblyInfo.cs .

build_sources = $(addprefix $(srcdir)/, $(sources)) AssemblyInfo.cs
build_references = $(addprefix /r:, $(references)) $(GTK_SHARP_LIBS)

$(ASSEMBLY): generated-stamp $(build_sources) $(references)
	@rm -f $(ASSEMBLY).mdb
	if ! test -f ./$(SNK); then cp $(top_srcdir)/bindings/dotnet/$(SNK) .; fi
	$(CSC) $(CSFLAGS) -nowarn:0169,0612,0618 -unsafe -out:$(ASSEMBLY) -target:library $(build_references) generated/*.cs $(build_sources)
	rm -rf ./$(SNK)

install-data-local:
	@if test -n '$(pkg)'; then							\
	  echo "$(GACUTIL) /i $(ASSEMBLY) /f /package $(ASSEMBLY_NAME)-1.0 /root $(DESTDIR)$(libdir)";				\
	  $(GACUTIL) /i $(ASSEMBLY) /f /package $(ASSEMBLY_NAME)-1.0 /root $(DESTDIR)$(libdir) || exit 1;			\
	fi

uninstall-local:
	@if test -n '$(pkg)'; then							\
	  echo "$(GACUTIL) /u $(ASSEMBLY_NAME) /package $(ASSEMBLY_NAME)-1.0 /root $(DESTDIR)$(libdir)";			\
	  $(GACUTIL) /u $(ASSEMBLY_NAME) /package $(ASSEMBLY_NAME)-1.0 /root $(DESTDIR)$(libdir) || exit 1;			\
	fi

